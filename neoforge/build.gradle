plugins {
    id 'com.github.johnrengelman.shadow'
    id "com.modrinth.minotaur"
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')
    include("com.technicjelle:BMUtils:4.2.1")
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/neoforge.mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}

modrinth {
    if (project.hasProperty('modrinth.apikey')) { // $GRADLE_USER_HOME/gradle.properties
        token = getProperty("modrinth.apikey")
        projectId = 'OGGG6gVy'
        versionNumber = version + "-${project.minecraft_version}"
        versionName = "BlueMapFrontiers-NeoForge $version (MC ${project.minecraft_version})"
        uploadFile = remapJar
        changelog = project.changelog
        gameVersions = ["${project.minecraft_version}"]
        loaders = ['forge']
        versionType = project.releaseType.toUpperCase()
        dependencies {
            required.project "bluemap"
            required.project "mapfrontiers"
        }
    }
}